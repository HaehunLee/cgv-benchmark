<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" 
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap>
		
	<select id="selectAllMovies" resultClass="Movie">
		select 
			MOVIE_NO as no,
			MOVIE_KORTITLE as korTitle,
			MOVIE_ENGTITLE as engTitle,
			MOVIE_RESERVATION_RATE as reservationRate,
			MOVIE_GPA as gpa,
			MOVIE_REAL_MEMBERS realMembers,
			MOVIE_DIRECTOR director,
			MOVIE_GENRE genre,
			MOVIE_AGE_LIMIT ageLimit,
			MOVIE_RUNNING_TIME runningTime,
			MOVIE_PROD_COUNTRY country,
			MOVIE_RELEASE_DATE releaseDate,
			MOVIE_WISHLIST wishList,
			MOVIE_INFO info, 
			MOVIE_TRAILER trailer,
			MOVIE_STEEL_CUT steelCut,
			MOVIE_SCREEN_YN screenYn,
			MOVIE_PRICE price,
			MOVIE_ACTORS actors,
			MOVIE_POSTER poster
		from
			jf_movies
	</select>
	
	<select id="setlect4MoviesRankByGpa" resultClass="Movie">
		select row_no, no, korTitle, engTitle, reservationRate, gpa, realMembers, director,
		        genre, ageLimit, runningTime,country, releaseDate, wishList, info, trailer, 
		        steelCut, screenYn, price, actors, poster
		from (
		      select row_number() over(Order by movie_gpa desc) as row_no,
	            MOVIE_NO as no,
	            MOVIE_KORTITLE as korTitle,
	            MOVIE_ENGTITLE as engTitle,
	            MOVIE_RESERVATION_RATE as reservationRate,
	            MOVIE_GPA as gpa,
	            MOVIE_REAL_MEMBERS realMembers,
	            MOVIE_DIRECTOR director,
	            MOVIE_GENRE genre,
	            MOVIE_AGE_LIMIT ageLimit,
	            MOVIE_RUNNING_TIME runningTime,
	            MOVIE_PROD_COUNTRY country,
	            MOVIE_RELEASE_DATE releaseDate,
	            MOVIE_WISHLIST wishList,
	            MOVIE_INFO info, 
	            MOVIE_TRAILER trailer,
	            MOVIE_STEEL_CUT steelCut,
	            MOVIE_SCREEN_YN screenYn,
	            MOVIE_PRICE price,
	            MOVIE_ACTORS actors,
	            MOVIE_POSTER poster
	        from jf_movies
	      )
			where row_no &lt;=4
	</select>
	
	<select id="getMovieByNo" parameterClass="int" resultClass="Movie">
		select 
			MOVIE_NO as no,
			MOVIE_KORTITLE as korTitle,
			MOVIE_ENGTITLE as engTitle,
			MOVIE_RESERVATION_RATE as reservationRate,
			MOVIE_GPA as gpa,
			MOVIE_REAL_MEMBERS realMembers,
			MOVIE_DIRECTOR director,
			MOVIE_GENRE genre,
			MOVIE_AGE_LIMIT ageLimit,
			MOVIE_RUNNING_TIME runningTime,
			MOVIE_PROD_COUNTRY country,
			MOVIE_RELEASE_DATE releaseDate,
			MOVIE_WISHLIST wishList,
			MOVIE_INFO info, 
			MOVIE_TRAILER trailer,
			MOVIE_STEEL_CUT steelCut,
			MOVIE_SCREEN_YN screenYn,
			MOVIE_PRICE price,
			MOVIE_ACTORS actors,
			MOVIE_POSTER poster
		from
			jf_movies
		where
			movie_no = #value#
	</select>
	<select id="getRank1MovieByGPA" resultClass="Movie">
		select no,korTitle,engTitle,reservationRate,gpa,realMembers,director,genre,ageLimit,runningTime,
				country,releaseDate,wishList,info,trailer,steelCut,screenYn,price,ac
		from(
			select
		        row_number() over(order by movie_gpa desc) as ranking,
		        MOVIE_NO as no,
		        MOVIE_KORTITLE as korTitle,
		        MOVIE_ENGTITLE as engTitle,
		        MOVIE_RESERVATION_RATE as reservationRate,
		        MOVIE_GPA as gpa,
		        MOVIE_REAL_MEMBERS realMembers,
		        MOVIE_DIRECTOR director,
		        MOVIE_GENRE genre,
		        MOVIE_AGE_LIMIT ageLimit,
		        MOVIE_RUNNING_TIME runningTime,
		        MOVIE_PROD_COUNTRY country,
		        MOVIE_RELEASE_DATE releaseDate,
		        MOVIE_WISHLIST wishList,
		        MOVIE_INFO info, 
		        MOVIE_TRAILER trailer,
		        MOVIE_STEEL_CUT steelCut,
		        MOVIE_SCREEN_YN screenYn,
		        MOVIE_PRICE price,
		        MOVIE_ACTORS ac
		from jf_movies)
		where ranking=1
	</select>
	
<!-- 	<update id="updateGPAByReview" parameterClass="">
		
	</update> -->
</sqlMap>