<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" 
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap>
	<select id="getReviewsCountByMovie" parameterClass="int" resultClass="int">
		select count(*) as cnt
		from jf_reviews
        where movie_no = #value#
	</select>
	
	<select id="getReviewsByRangeAndMovie" parameterClass="map" resultClass="Review">
		select
            row_no,
		    no,
		    gpa,
		    rcomment,
		    production,
		    ost,
		    story,
		    actor,
		    beauty, 
		    memberId,
		    movieNo,
		    likes,
		    createDate
		from (
				select
	                ROW_NUMBER() OVER (ORDER BY review_no DESC) as row_no,
				    REVIEW_NO as no,
				    REVIEW_GPA as gpa,
				    REVIEW_COMMENT as rcomment,
				    REVIEW_PRODUCTION production,
				    REVIEW_OST ost,
				    REVIEW_STORY story,
				    REVIEW_ACTOR actor,
				    REVIEW_BEAUTY beauty, 
				    MEMBER_ID memberId,
				    MOVIE_NO movieNo,
				    REVIEW_LIKES likes,
				    REVIEW_CREATE_DATE createDate
  					from
  						jf_reviews
  					where movie_no = #movieNo#)
           where (row_no >=#begin# and row_no &lt;=#end#)  
	</select>
	
	<select id="getGPAByMovie"  parameterClass="int" resultClass="int">
		select
			nvl(sum(review_gpa), 0)
		from
			jf_reviews
		where movie_no = #value#
	</select>
	<insert id="insertReview" parameterClass="Review">
		insert into jf_reviews
					(REVIEW_NO,
					REVIEW_GPA,
					REVIEW_COMMENT,
					REVIEW_PRODUCTION,
					REVIEW_OST,
					REVIEW_STORY,
					REVIEW_ACTOR,
					REVIEW_BEAUTY,
					MEMBER_ID,
					MOVIE_NO,
					REVIEW_LIKES)
					values(
						JF_REVIEW_SEQ.nextval,
						#gpa#,
						#rcomment#,
						#production#,
						#ost#,
						#story#,
						#actor#,
						#beauty#,
						#memberId#,
						#movieNo#,
						#likes#
					)
	</insert>
	<update id="updateReview" parameterClass="Review">
		update jf_reviews
		set
			REVIEW_GPA = #gpa#,
			REVIEW_COMMENT = #rcomment#,
			REVIEW_PRODUCTION = #production#,
			REVIEW_OST = #ost#,
			REVIEW_STORY = #story#,
			REVIEW_ACTOR = #actor#,
			REVIEW_BEAUTY = #beauty#,
			MOVIE_NO = #movieNo#,
			REVIEW_CREATE_DATE = #createDate#,
			REVIEW_LIKES = #likes#
		where review_no = #no#
	</update>
	
	<select id="getReviewByNo" parameterClass="int" resultClass="Review">
		select
			REVIEW_NO as no,
			REVIEW_GPA as gpa,
			REVIEW_COMMENT as rcomment,
			REVIEW_PRODUCTION production,
			REVIEW_OST ost,
			REVIEW_STORY story,
			REVIEW_ACTOR actor,
			REVIEW_BEAUTY beauty, 
			MEMBER_ID memberId,
			MOVIE_NO movieNo,
			REVIEW_LIKES likes,
			REVIEW_CREATE_DATE createDate
			from
			    jf_reviews
			where review_no = #value#
	</select>
</sqlMap>